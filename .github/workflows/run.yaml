name: Python App Workflow HeatGCalController

on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: 'Run the script in dry-run mode (true/false)'
        required: true
        default: false
        type: choice
        options:
          - false
          - true
      mode:
        description: 'Select mode to run the script'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - get_schedules
          - set_heaters
  schedule:
    - cron: "*/5 * * * *"  # Runs every 5 minutes

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  HEATZY_CREDENTIALS: ${{ secrets.HEATZY_CREDENTIALS }}
  STOVE_CREDENTIALS: ${{ secrets.STOVE_CREDENTIALS }}

jobs:
  run-python-script:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y s3fs

      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS credentials for s3fs
        run: |
          echo "${{ secrets.AWS_ACCESS_KEY_ID }}:${{ secrets.AWS_SECRET_ACCESS_KEY }}" > $HOME/.passwd-s3fs
          chmod 600 $HOME/.passwd-s3fs

      - name: Create mount point and mount S3 bucket
        run: |
          mkdir -p mnt/s3
          s3fs ${{ secrets.S3_BUCKET_NAME }} mnt/s3 -o passwd_file=$HOME/.passwd-s3fs -o url=https://s3.${{ secrets.AWS_REGION }}.amazonaws.com -o use_path_request_style

      # Run the Python script with or without --dry-run based on input
      - name: Run main.py
        run: |
          INPUT_MODE="${{ github.event.inputs.mode }}"
          INPUT_DRY_RUN="${{ github.event.inputs.dry-run }}"
          MODE=${INPUT_MODE:-"all"}
          DRY_RUN=${INPUT_DRY_RUN:-"false"}
          if [ "$DRY_RUN" == "true" ]; then
            echo "Running in dry-run mode"
            python3 app/main.py --dry-run  --mode "$MODE" --configs mnt/s3/configs/main.yaml
          else
            echo "Running in normal mode"
            python3 app/main.py --mode "$MODE" --configs mnt/s3/configs/main.yaml
          fi

      - name: Unmount S3 bucket
        run: |
          fusermount -u mnt/s3