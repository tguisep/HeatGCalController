---
#### MAIN CONFIG ####

# Timezone setting for the system. This should correspond to your local time zone.
# You can find a full list of available timezones here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
timezone: Europe/Paris

# Logs configuration
logs:
  # Log level for the application. It can be set to 'debug', 'info', 'warning', 'error', or 'critical'.
  # 'debug' provides detailed logging information, ideal for development and troubleshooting.
  level: debug
  # Directory where log files will be stored. Make sure the path exists and is writable.
  directory: mnt/s3/outputs/logs

#### GET_SCHEDULE CONFIG ####

# Configuration for retrieving external schedules, e.g., from Google Calendar.
get_schedules:
  # Configuration for schedule providers (e.g., Google Calendar).
  providers:
    google:
      # Path to the Google service account credentials. Uncomment if you're using a file-based credential.
      #credentials: file://credentials/credentials_google.json
      # Google service account credentials are being sourced from environment variables for security.
      credentials: env://GOOGLE_CREDENTIALS

  # Output path for the retrieved calendar schedule in JSON format.
  # This file will be used by the set_heaters section to control heating schedules.
  outputs:
    schedules: mnt/s3/outputs/schedules.json

#### SET_HEATERS CONFIG ####

# Configuration for controlling heaters based on the retrieved schedule.
set_heaters:

  # The maximum delay in seconds to reapply a manual heater change.
  # After this time, any manual adjustments will be overridden by the automatic schedule.
  max_delay_reapplied: 10800

  # Heater providers configuration.
  providers:
    # Heatzy is a heater control service provider. Enable or disable and specify credentials.
    heatzy:
      # Credentials for Heatzy, either through a file or environment variable for security.
      # credentials: file://credentials/credentials_heatzy.json
      credentials: env://HEATZY_CREDENTIALS
      # Set to true to enable the Heatzy heater management.
      enabled: true

    # EDF Tempo tariff management. Automatically manages heaters based on EDF tariff signals.
    edf_tempo:
      # Set to true to enable EDF Tempo management.
      enabled: true
      # Margin (in minutes) before the start of red hours when heaters will be turned off or adjusted.
      red_hour_margin: 5
      # Automatically turn off heaters during red hours to save energy.
      off_red_hour: true
      # Specific heating schedules for red hours. These define when red hours begin and end.
      schedules:
        - red_hour_start: 6
          red_hour_stop: 23

    # Stove heater control settings.
    stove:
      # Enable or disable stove heater management.
      enabled: true
      # Credentials for the stove management, sourced from environment variables for security.
      # credentials: file://credentials/credentials_stove.json
      credentials: env://STOVE_CREDENTIALS
      # Defined temperatures for different heater modes.
      temperatures:
        COMFORT_PLUS: 23    # Comfort Plus mode temperature in Celsius.
        COMFORT: 21         # Comfort mode temperature in Celsius.
        COMFORT_ECO: 19     # Comfort Eco mode temperature in Celsius.
        LOW_MODE: 16        # Low mode temperature in Celsius.

  # Input configuration files for heater management.
  inputs:
    # Path to the file storing the current mode of all heaters.
    status: mnt/s3/outputs/last-status.json
    # Path to the schedule file generated by the get_schedules section.
    schedules: mnt/s3/outputs/schedules.json
    # Sequence configuration file (currently not implemented).
    sequences: mnt/s3/sequences.yaml
    # Path to the configuration file that defines available modes for the heaters.
    modes: mnt/s3/modes.yaml
