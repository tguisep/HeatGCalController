---
#### MAIN CONFIG ####
# DEFINE YOUR TIMEZONE: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
timezone: Europe/Paris

# Logs configuration
logs:
  level: debug
  directory: outputs/logs

# Install options // Not taken in charge
install:
  use_compose: true
  use_systemd: true

#### GET_SCHEDULE CONFIG ####
get_schedules:
  # google service account credentials
  providers:
    google:
      #credentials: file://credentials/credentials_google.json
      credentials: env://GOOGLE_CREDENTIALS
  # Run interval between each schedule retrieval.
  # A too long value may delay last minute change ( 60seconds min recommended )
  run_interval: 300

  # File output calendar schedule (must match with set_heaters.yaml/inputs/schedules )
  outputs:
    schedules: outputs/schedules.json


#### SET_HEATERS CONFIG FILE ####

# Heater management software
set_heaters:
  # Run between check (do not set less than 30s)
  run_interval: 60
  # In case of manuel change, this delay (seconds) will delay and keep the change desired
  max_delay_reapplied: 10800

  providers:
    heatzy:
      # Credential file or env
      # credentials: file://credentials/credentials_heatzy.json
      credentials: env://HEATZY_CREDENTIALS
      enabled: true
    # Use EDF tempo
    edf_tempo:
      enabled: true
      red_hour_margin: 5
      off_red_hour: true
      schedules:
        - red_hour_start: 6
          red_hour_stop: 23
    stove:
      enabled: true
      #credentials: file://credentials/credentials_stove.json
      credentials: env://STOVE_CREDENTIALS
      temperatures:
        COMFORT_PLUS: 23
        COMFORT: 21
        COMFORT_ECO: 19
        LOW_MODE: 16

  inputs:
    # status file save the current mode on heaters
    status: outputs/last-status.json
    # schedule file generated by get_schedules software (google calendar output)
    schedules: outputs/schedules.json
    # sequences file (not implemented)
    sequences: configs/sequences.yaml
    # Configuration of the heaters
    modes: configs/modes.yaml
